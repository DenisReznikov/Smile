language: cpp

sudo: required

compiler: gcc

#env: QT_BASE="512"
matrix:
  include:
#ubuntu 16.04 LTS(xenial)
    - os: linux
      dist: xenial
      env: 
        targetFile=Smile
        releaseName=Smile_ubuntu_xenial_x64
        qtppa="ppa:beineri/opt-qt-5.12.3-xenial"
      cache:
        bundler: true
        apt: true
        directories:
            - /opt/qt*/


  #macOS 10.14 with xcode 11
    - os: osx
      osx_image: xcode11
      env: 
        targetFile=Smile
        releaseName=Smile_macos10-14_xcode10-2.dmg
        qtDir=/usr/local/opt/qt
      cache:
        bundler: true
        directories:
            - /usr/local/Cellar/qt/
            - /usr/local/opt/qt/
            
group: deprecated-2019Q1


before_install:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo add-apt-repository ${qtppa} -y; sudo apt-get update -qq; sudo apt-get install -y libglew-dev libglfw3-dev; sudo apt-get install -y qt512-meta-minimal; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; brew install qt; brew link qt --force; fi 

install:
  - source /opt/qt*/bin/qt*-env.sh

before_script:
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then source /opt/qt512/bin/qt512-env.sh; fi
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then export PATH=${qtDir}/bin:${PATH} ; fi

script:
  - cd Smile
  - qmake CONFIG+=release
  - make
  - wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  - chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  # - ./linuxdeployqt-continuous-x86_64.AppImage Smile -appimage
  - ./linuxdeployqt-continuous-x86_64.AppImage --appimage-extract-and-run -e Smile --appdir appdir -e -i ../appimage/smile-icon.svg -d ../appimage/smile.desktop --output appimage
  - pwd
  - ls

before_deploy:
    - pwd
    - ls 
    - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then macdeployqt Smile/${targetFile}.app -qmldir=${qtDir}/qml -verbose=1 -dmg ; mv Smile/${targetFile}.dmg Smile/${releaseName} ; fi
    - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then mv Smile/${targetFile} Smile/${releaseName} ; fi

deploy:
  provider: releases 
  api_key: $GITHUB_OAUTH_TOKEN 
  file: Smile/${releaseName}   
  skip_cleanup: true  
notifications:
    email: false
